// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.

@import "ui-variables";

atom-text-editor.editor {
	.debug-breakpoint,
	.debug-breakpoint-hint {
		width: 1em;
		text-align: center;

		&:after {
			display: inline-block;
			vertical-align: middle;
			width: 0.9em;
			height: 0.9em;
			content: "";
			background: @background-color-error;
			border-radius: 50%;
			margin-top: -2px;
			border: 1px solid rgba(255, 255, 255, 0.2);
			box-sizing: border-box;
		}
	}
	.debug-breakpoint-hint {
		opacity: 0.4;
	}
	.gutter[gutter-name="debug-gutter"] {
		cursor: pointer;
	}
	.line-number.debug-position,
	.line-number.debug-position-error {
		position: relative;
		color: @text-color-warning;
		overflow: hidden;
		border-radius: @component-border-radius;
		&:after {
			content: "";
			position: absolute;
			top: 50%;
			right: 0px;
			margin-top: -100px;
			border-left: 100px solid fade(@background-color-warning, 50%);
			border-top: 100px solid transparent;
			border-bottom: 100px solid transparent;
		}
	}
	.line-number.debug-position-error {
		color: @text-color-error;
		&:after {
			border-left: 100px solid fade(@background-color-error, 50%);
		}
	}
	.line.debug-position,
	.line.debug-position-error {
		border-radius: @component-border-radius;
		background: fade(@background-color-warning, 20%);
	}
	.line.debug-position-error {
		background: fade(@background-color-error, 20%);
	}
}

.debug-toolbar {
	padding: @component-padding / 2;
	-webkit-user-select: none;

	.btn-toolbar {
		margin-left: 0;
		margin-right: 0;

		.btn .icon {
			display: inline-block;
			width: 17px;
			height: 19px;
			fill: currentColor;
			vertical-align: middle;
			margin-top: -2px;
		}

		.options {
			float: right;
			margin-right: 0;
		}
	}
}

.debug-sidebar {
	display: flex;
	flex-direction: column;
	-webkit-user-select: none;

	.selectable {
		-webkit-user-select: text;
	}

	&.with-toolbar {
		background: rgba(0,0,0,0.2);

		> .body {
			padding-top: @component-padding;
		}
	}

	> .body {
		flex: 1 1;
		overflow: auto;
		padding-left: @component-padding;
		padding-right: @component-padding;

		> ul {
			width: min-content;
		}
	}

	> .options {
		flex: 0 0 auto;
		margin: @component-padding;
	}

	.toolbar {
		display: flex;
		flex: 0 0 auto;

		background: @app-background-color;
		padding: @component-padding;
		border-bottom: 1px solid @base-border-color;

		> .spacer {
			flex: 1 1;
		}

		> .btn-group {
			display: block;
			margin-right: @component-padding;

			> .btn {
				height: 100%;
			}
		}
	}

	.inset-panel {

		&.variables {
			flex: 2 0;
		}

		+ .inset-panel {
			margin-top: @component-padding;
		}

		.panel-heading {
			cursor: default;
			.btn {
				top: 0;
				margin: -4px -4px -4px 0;
			}
			.options {
				float: right;
			}
		}

		.panel-body {
			overflow: auto;
			position: relative;
		}
	}
	.list-item {
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.variable-list {
		.type {
			display: none;
		}
		&.show-types .type {
			display: inline;
		}
	}

	table {
		width: 100%;
		margin: 0;
		line-height: @component-line-height;
		white-space: nowrap;
		overflow: hidden;
		cursor: default;

		tr.selected > td:first-child {
			width: 100%;
		}

		tr.selected > td::before {
			content: '';
			background-color: @background-color-highlight;
			position: absolute;
			left: 0;
			right: 0;
			height: @component-line-height;
			z-index: 0;
		}

		tr > td > * {
			position: relative;
			z-index: 1;
		}

		.no-icon {
			display: inline-block;
			padding-left: @component-icon-padding + @component-icon-size;
		}
	}

	code {
		font-family: Menlo, Consolas, 'DejaVu Sans Mono', monospace;
		& when (isunit(@font-size, pt)), (isunit(@font-size, px)) {
			font-size: max(@font-size, 12px);
		}
		color: contrast(@inset-panel-background-color, @syntax-text-color);
		background: transparent;
		.identifier {
			// color: @syntax-color-variable;
		}
		.value {
			// color: @syntax-color-constant;
			color: @text-color-info;
		}
	}
}

.debug-custom-panel {
	@min-width: 200px;
	@item-width: 260px;
	@button-width: 150px;
	.panel-heading {
		position: relative;
		cursor: default;

		.action-close {
			border: 0 none;
			background: transparent;
			position: absolute;
			top: 0;
			right: 0;
			height: 100%;
			cursor: pointer;

			&::before {
				width: 28px;
				margin-right: 0;
				text-align: center;
				vertical-align: middle;
			}
			&::after {
				content: '';
				display: inline-block;
				height: 100%;
				vertical-align: middle;
			}
		}
	}
	.header {
		padding: @component-padding/4 @component-padding/2;
		min-width: @min-width;
	}
	.header-item {
		margin: @component-padding/4 0;
	}
	.btn-group {
		display: flex;
		flex: 1 1 @button-width;
		min-width: @button-width;
	}
	.btn-item {
		flex: auto;
	}
	.input-block {
		display: flex;
		flex-wrap: wrap;
		width: 100%;
		min-width: @min-width;
	}
	.body {
		display: flex;
	}
	.labeled-block {
		align-items: center;
	}
		.labeled-block label {
			margin-top: 0;
			margin-bottom: 0;
		}
	.input-select-item {
		padding-left: @component-padding / 2;
		margin-left: @component-padding;
	}
	.input-inline-block {
		display: inline-block;
		flex: auto;
	}
	.inline-block-start {
		display: flex;
		flex: none;
		flex-direction: column;
		padding: @component-padding / 2;
	}
		.inline-block-start > * {
			margin: @component-padding / 2 0;
			flex: 0 1 auto;
			line-height: 2.3em;
		}
		.inline-block-start > *.btn-lg {
			flex: 1 1 auto;
			line-height: 2em;
		}
		.inline-block-start > *:first-child {
			margin-top: 0;
		}
		.inline-block-start > *:last-child {
			margin-bottom: 0;
		}
	.input-block-item {
		flex: 1;
		padding: @component-padding / 2;
	}
	.input-block-item--flex {
		flex: 100 1 @item-width;
	}
	.editor-container {
		position: relative;
		atom-text-editor {
			width: 100%;
		}
	}
}

.debug-variable-tooltip {
	max-height: 300px;
	overflow: hidden;
	line-height: 1.2em;
	text-align: left;
	text-overflow: ellipsis;
}

.debug-hint-block {
	cursor: default;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;

	&.hidden {
		display: none;
	}

	.indent {
		display: inline-block;
		white-space: pre;
	}

	.content {
		position: relative;
		margin-top: 8px;
		margin-bottom: 4px;
		display: inline-block;
		font-size: 90%;
		color: @text-color-info;
		background: fade(@text-color-info, 10%);
		border-radius: @component-border-radius;
		border-top-left-radius: 0;
		padding: 0 4px;

		&:before {
			display: block;
			position: absolute;
			top: -8px;
			left: 0;
			content: ' ';
			border-right: 8px solid transparent;
			border-bottom: 8px solid fade(@text-color-info, 10%);
		}
	}
}

.debug-hint-overlay {
	position: relative;
	left: 1em;
	margin-top: -1px;
	max-width: 400px;
	cursor: default;
	border-radius: @component-border-radius;
	padding: 0 4px 1px;
	overflow: hidden;
	text-overflow: ellipsis;
	color: contrast(@background-color-info);
	background: @background-color-info;
	border-top: 1px solid lighten(@background-color-info, 4%);
	border-bottom: 1px solid darken(@background-color-info, 4%);
	box-shadow: 0 1px 5px rgba(0,0,0,0.3);
}

.debug-fadein {
	animation: debug-fadein 2s;
}

@keyframes debug-fadein {
	  0% { opacity: 0; }
	100% { opacity: 1; }
}
